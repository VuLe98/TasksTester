plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id 'org.jetbrains.dokka' version '0.9.18'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'war'
apply plugin: 'org.jetbrains.dokka'

group 'nl.han.ica.oose.roubaix.planningspoker'
version '1.0'

sourceCompatibility = 11

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.0-M1'
    testImplementation 'org.mockito:mockito-inline:2.27.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.0-M1'
    ktlint "com.pinterest:ktlint:0.31.0"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.27.0'
    providedCompile group: 'javax', name: 'javaee-api', version:'8.0.1'
    compile group: 'com.airhacks', name: 'jaxrs-cors', version:'0.0.1'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.28'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task runExample(type: JavaExec) {
    main = 'nl.han.ica.oose.roubaix.planningspoker.HelloWorld'
    classpath = sourceSets.main.runtimeClasspath
}


//task ktlint(type: JavaExec, group: "verification") {
//    description = "Check Kotlin code style."
//    main = "com.pinterest.ktlint.Main"
//    classpath = configurations.ktlint
//    args "src/**/*.kt"
//}
//check.dependsOn ktlint
//
//task ktlintFormat(type: JavaExec, group: "formatting") {
//    description = "Fix Kotlin code style deviations."
//    main = "com.pinterest.ktlint.Main"
//    classpath = configurations.ktlint
//    args "-F", "src/**/*.kt"
//}
